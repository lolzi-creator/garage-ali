{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/up278820/aligarage/auto-garage-website/src/app/api/admin/cars/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport fs from 'fs';\nimport path from 'path';\nimport { Car } from '@/types';\n\nconst CARS_FILE_PATH = path.join(process.cwd(), 'src/data/cars.json');\n\n// Ensure the data directory exists\nfunction ensureDataDirectory() {\n  const dataDir = path.dirname(CARS_FILE_PATH);\n  if (!fs.existsSync(dataDir)) {\n    fs.mkdirSync(dataDir, { recursive: true });\n  }\n}\n\n// Read cars from JSON file\nfunction readCarsFromFile(): Car[] {\n  try {\n    if (!fs.existsSync(CARS_FILE_PATH)) {\n      return [];\n    }\n    const data = fs.readFileSync(CARS_FILE_PATH, 'utf8');\n    return JSON.parse(data);\n  } catch (error) {\n    console.error('Error reading cars file:', error);\n    return [];\n  }\n}\n\n// Write cars to JSON file\nfunction writeCarsToFile(cars: Car[]) {\n  try {\n    ensureDataDirectory();\n    fs.writeFileSync(CARS_FILE_PATH, JSON.stringify(cars, null, 2));\n  } catch (error) {\n    console.error('Error writing cars file:', error);\n    throw error;\n  }\n}\n\n// GET /api/admin/cars - Get all cars\nexport async function GET() {\n  try {\n    const cars = readCarsFromFile();\n    return NextResponse.json(cars);\n  } catch (error) {\n    console.error('Error fetching cars:', error);\n    return NextResponse.json({ error: 'Failed to fetch cars' }, { status: 500 });\n  }\n}\n\n// POST /api/admin/cars - Create a new car\nexport async function POST(request: NextRequest) {\n  try {\n    const carData: Car = await request.json();\n    \n    // Validate required fields\n    const requiredFields = ['brand', 'model', 'year', 'price', 'description'];\n    for (const field of requiredFields) {\n      if (!carData[field as keyof Car]) {\n        return NextResponse.json(\n          { error: `Missing required field: ${field}` },\n          { status: 400 }\n        );\n      }\n    }\n\n    // Generate ID if not provided\n    if (!carData.id) {\n      carData.id = `car-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    }\n\n    // Set default values\n    carData.dateAdded = new Date().toISOString().split('T')[0];\n    carData.isAvailable = carData.isAvailable ?? true;\n    carData.isFeatured = carData.isFeatured ?? false;\n    carData.contactPerson = carData.contactPerson || 'Ali';\n    carData.location = carData.location || 'Lengnau';\n\n    const cars = readCarsFromFile();\n    cars.push(carData);\n    writeCarsToFile(cars);\n\n    return NextResponse.json(carData, { status: 201 });\n  } catch (error) {\n    console.error('Error creating car:', error);\n    return NextResponse.json({ error: 'Failed to create car' }, { status: 500 });\n  }\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAGA,MAAM,iBAAiB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAEhD,mCAAmC;AACnC,SAAS;IACP,MAAM,UAAU,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC;IAC7B,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,UAAU;QAC3B,6FAAA,CAAA,UAAE,CAAC,SAAS,CAAC,SAAS;YAAE,WAAW;QAAK;IAC1C;AACF;AAEA,2BAA2B;AAC3B,SAAS;IACP,IAAI;QACF,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,iBAAiB;YAClC,OAAO,EAAE;QACX;QACA,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,gBAAgB;QAC7C,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,EAAE;IACX;AACF;AAEA,0BAA0B;AAC1B,SAAS,gBAAgB,IAAW;IAClC,IAAI;QACF;QACA,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,gBAAgB,KAAK,SAAS,CAAC,MAAM,MAAM;IAC9D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,MAAM;IACR;AACF;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,OAAO;QACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;AACF;AAGO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,UAAe,MAAM,QAAQ,IAAI;QAEvC,2BAA2B;QAC3B,MAAM,iBAAiB;YAAC;YAAS;YAAS;YAAQ;YAAS;SAAc;QACzE,KAAK,MAAM,SAAS,eAAgB;YAClC,IAAI,CAAC,OAAO,CAAC,MAAmB,EAAE;gBAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBAAE,OAAO,CAAC,wBAAwB,EAAE,OAAO;gBAAC,GAC5C;oBAAE,QAAQ;gBAAI;YAElB;QACF;QAEA,8BAA8B;QAC9B,IAAI,CAAC,QAAQ,EAAE,EAAE;YACf,QAAQ,EAAE,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI;QAC7E;QAEA,qBAAqB;QACrB,QAAQ,SAAS,GAAG,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QAC1D,QAAQ,WAAW,GAAG,QAAQ,WAAW,IAAI;QAC7C,QAAQ,UAAU,GAAG,QAAQ,UAAU,IAAI;QAC3C,QAAQ,aAAa,GAAG,QAAQ,aAAa,IAAI;QACjD,QAAQ,QAAQ,GAAG,QAAQ,QAAQ,IAAI;QAEvC,MAAM,OAAO;QACb,KAAK,IAAI,CAAC;QACV,gBAAgB;QAEhB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS;YAAE,QAAQ;QAAI;IAClD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;AACF","debugId":null}}]
}